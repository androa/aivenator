name: Build and deploy Aivenator
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  push:
    paths-ignore:
      - hack/**
      - charts/**
      - '*.md'
env:
  image_base: ghcr.io/${{ github.repository }}/aivenator

jobs:
  build:
    name: Build and push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # ratchet:actions/checkout@v3
      - name: Generate image environment variable
        id: set-image-tag
        run: |
          version=$(./version.sh)
          echo "version=${version}" >> $GITHUB_OUTPUT
          echo "image=${image_base}:${version}" >> $GITHUB_OUTPUT
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # Use commit-sha1 instead of tag for security concerns
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: build-push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # ratchet:docker/build-push-action@v4
        with:
          context: .
          push: "${{ github.ref == 'refs/heads/main' }}"
          tags: ${{ env.image_base }}:latest,${{ steps.set-image-tag.outputs.image }}
      - name: Install cosign
        if: github.ref == 'refs/heads/main'
        uses: sigstore/cosign-installer@c3667d99424e7e6047999fb6246c0da843953c65 # ratchet:sigstore/cosign-installer@main
        with:
          cosign-release: 'v2.0.0'
      - name: Sign the container image
        if: github.ref == 'refs/heads/main'
        run: cosign sign --yes ${{ env.image_base }}@${{ steps.build-push.outputs.digest }}
      - name: Create SBOM
        if: github.ref == 'refs/heads/main'
        uses: aquasecurity/trivy-action@1f0aa582c8c8f5f7639610d6d38baddfea4fdcee # ratchet:aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          format: 'cyclonedx'
          output: 'cyclone.sbom.json'
          image-ref: ${{ env.image_base }}@${{ steps.build-push.outputs.digest }}
      - name: Attest
        if: github.ref == 'refs/heads/main'
        run: cosign attest --yes --predicate cyclone.sbom.json --type cyclonedx ${{ env.image_base }}@${{ steps.build-push.outputs.digest }}
    outputs:
      image: "${{ steps.set-image-tag.outputs.image }}"
      version: "${{ steps.set-image-tag.outputs.version }}"

  deploy-fasit:
    name: Deploy to Fasit
    if: github.ref == 'refs/heads/main'
    runs-on: fasit-deploy
    permissions:
      id-token: write
    needs:
      - build
    steps:
      - uses: nais/fasit-deploy@b2c0b6d049b53bef41b321eec406fe66938576fd # ratchet:nais/fasit-deploy@main
        with:
          json: '{"image": {"tag": "${{ needs.build.outputs.version }}"}}'
          feature_name: aivenator
